# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/bionic64"
  config.disksize.size = '50GB'

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end

  config.vm.provider :virtualbox do |v, override|
    v.memory = 8192
    v.cpus = 8

    required_plugins = %w( vagrant-vbguest )
    required_plugins.each do |plugin|
      system "vagrant plugin install #{plugin}" unless Vagrant.has_plugin? plugin
    end
  end

  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision 'shell' do |s|
    s.inline = 'echo Setting up machine name'

    config.vm.provider :virtualbox do |v, override|
      v.name = "Mr. Fusion build environment"
    end
  end

  config.vm.provision "shell", inline: <<-SHELL
    apt-get -y update
    apt-get -y upgrade
    apt-get -y install build-essential git libncurses-dev flex bison openssl \
      libssl-dev dkms libelf-dev libudev-dev libpci-dev libiberty-dev autoconf \
      liblz4-tool bc curl gcc git libssl-dev libncurses5-dev lzop make \
      u-boot-tools unzip exfat-utils
    apt-get -y build-dep linux
    apt-get -q -y autoremove
    apt-get -q -y clean
  SHELL

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    if [ ! -d /home/vagrant/u-boot ]
      then
        git clone https://github.com/u-boot/u-boot.git
    fi

    if [ ! -d /home/vagrant/linux-socfpga ]
      then
        git clone https://github.com/altera-opensource/linux-socfpga.git
    fi

    if [ ! -d /home/vagrant/buildroot-2020.02.3 ]
      then
        wget https://buildroot.org/downloads/buildroot-2020.02.3.tar.gz
        tar xvf buildroot-2020.02.3.tar.gz
        rm buildroot-2020.02.3.tar.gz
    fi

  SHELL
  config.vm.synced_folder "shared/", "/shared"
end
